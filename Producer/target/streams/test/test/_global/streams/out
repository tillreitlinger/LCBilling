[debug] Running TaskDef(OutlayTest, org.scalatest.tools.Framework$$anon$1@10b1f12a, false, [SuiteSelector])
[debug] Running TaskDef(LCTest, org.scalatest.tools.Framework$$anon$1@10b1f12a, false, [SuiteSelector])
[info] OutlayTest:
[info] - The function 'from' should return a Outlay object with Paul, if 'Paul' is passed
[info] - The function 'towards' should return a Outlay object with 'Martin, Till', if 'Martin, Till' is passed
[info] - The function 'of' should return a Outlay object with '100', if '100.EUR' is passed
[info] - The function 'of' should return a Outlay object with '92', if '100.CHF' is passed
[info] - The function 'at' should return a Outlay object with 'supermarket', if 'supermarket' is passed
[info] - The function chain should return a Outlay object
[info] LCTest:
[info] - The Function gnerateBill should return a right formatted String on the Input with the otlays *** FAILED ***
[info]   "...ll	Paul	Martin
[info]   	-250[,00	250,00	0,00	supermarket
[info]   	200,00	-200,00	0,00	cinema
[info]   	-50,00	50,00	0,]00
[info]   Till has to pay -..." was not equal to "...ll	Paul	Martin
[info]   	-250[.00	250.00	0.00	supermarket
[info]   	200.00	-200.00	0.00	cinema
[info]   	-50.00	50.00	0.]00
[info]   Till has to pay -..." (LCTest.scala:18)
[info]   Analysis:
[info]   "...ll	Paul	Martin
[info] 	-250[,00	250,00	0,00	supermarket
[info] 	200,00	-200,00	0,00	cinema
[info] 	-50,00	50,00	0,]00
[info] Till has to pay -..." -> "...ll	Paul	Martin
[info] 	-250[.00	250.00	0.00	supermarket
[info] 	200.00	-200.00	0.00	cinema
[info] 	-50.00	50.00	0.]00
[info] Till has to pay -..."
[info] - The Function getPayInstuctions should return a right formatted String which tells who has to pay how much
[info] - The Function createBillString should return a right formatted String which includes all the purchases but not the end result *** FAILED ***
[info]   "	-250[,00	250,00	0,00	supermarket
[info]   	200,00	-200,00	0,]00	cinema" was not equal to "	-250[.00	250.00	0.00	supermarket
[info]   	200.00	-200.00	0.]00	cinema" (LCTest.scala:38)
[info]   Analysis:
[info]   "	-250[,00	250,00	0,00	supermarket
[info] 	200,00	-200,00	0,]00	cinema" -> "	-250[.00	250.00	0.00	supermarket
[info] 	200.00	-200.00	0.]00	cinema"
[info] - The function getInitalSituation should return a vec with one 0 for each part of the LC
[info] - The function createNameString should return a String which includes the Name of each member in the right format
[info] - The function createSumString should return a String which includes the last row of the bill *** FAILED ***
[info]   "
[info]   	50[,00	-50,]00
[info]   " was not equal to "
[info]   	50[.00	-50.]00
[info]   " (LCTest.scala:57)
[info]   Analysis:
[info]   "
[info] 	50[,00	-50,]00
[info] " -> "
[info] 	50[.00	-50.]00
[info] "
[info] - The function generateSum should return a sum for each column the bill
[info] Run completed in 464 milliseconds.
[info] Total number of tests run: 13
[info] Suites: completed 2, aborted 0
[info] Tests: succeeded 10, failed 3, canceled 0, ignored 0, pending 0
[info] *** 3 TESTS FAILED ***
[debug] Passed tests:
[debug] 	OutlayTest
[error] Failed tests:
[error] 	LCTest
[error] (Test / test) sbt.TestsFailedException: Tests unsuccessful
